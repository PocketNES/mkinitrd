#!/bin/sh
printf "mkinitrd v1.0, PocketNES Software (c)2020\n\n"
args=$(getopt -o va -l verbosa,ayuda,estatico,busybox:,biblioteca:,carpeta:,tipord:,archivocp:,init:,disp: -n 'mkinitrd' -- "$@")
if [ $? != 0 ]; then
	echo "Error Fatal: GNU GetOpt es requirido para correr este programa. Saliendo..."
	exit 1
fi
eval set -- "$args"
dispositivos=""
verbosa=false
estatico=false
ruta_busybox=""
biblioteca=""
carpeta="/tmp/mkinitrd"
ayuda=true
tipoinitrd="initramfs"
archivos_copiar=""
while true; do
	case "$1" in
		-v | --verbosa )
			ayuda=false
			verbosa=true
			shift
			;;
		-a | --ayuda )
			ayuda=true
			shift
			;;
		--estatico )
			ayuda=false
			estatico=true
			shift
			;;
		--busybox )
			ayuda=false
			ruta_busybox="$2"
			shift 2
			;;
		--biblioteca )
			ayuda=false
			biblioteca="$2"
			shift 2
			;;
		--carpeta )
			ayuda=false
			carpeta="$2"
			shift 2
			;;
		--tipord )
			ayuda=false
			if [ "$2" = "initrd" ]; then
				tipoinitrd="initrd"
			elif [ "$2" = "initramfs" ]; then
				tipoinitrd="initramfs"
			fi
			shift 2
			;;
		--archivocp )
			ayuda=false
			archivos_copiar="$2"
			shift 2
			;;
		--init )
			ayuda=false
			init="$2"
			shift 2
			;;
		--disp )
			ayuda=false
			dispositivos="$2"
			shift 2
			;;
		-- )
			shift
			break
			;;
		* )
			break
			;;
	esac
done
if [ $ayuda = true ]; then
	echo "Ayuda:"
	echo "-v, --verbosa: Verbosa."
	echo "-a, --ayuda: Muestra esta ayuda."
	echo "--estatico: Utilize esta opcion si Busybox es estatico."
	echo "--busybox: Ruta de Busybox (Requerido)."
	echo "--biblioteca: Ruta de la biblioteca de C (Requirido si Busybox no es estatico)."
	echo "--carpeta: Cambiar carpeta (Pred. /tmp/mkinitrd)."
	echo "--tipord: Especificar tipo de ramdisk (initrd o initramfs)."
	echo "--archivocp: Archivo conteniendo lista de archivos para copiar."
	echo "--init: La ruta de init (Requerido)."
	echo "--disp: Un tar o cpio conteniendo los nodos de dispositivos."
	exit 0
elif [ "$ruta_busybox" = "" ]; then
	echo "Error: '--busybox' es una opcion requerida."
	exit 2
elif [ ! -f "$ruta_busybox" ]; then
	echo "Error: $ruta_busybox no es un archivo."
	exit 3
elif [ ! -x "$ruta_busybox" ]; then
	echo "Error: $ruta_busybox no es ejecutable."
	exit 4
elif [ $estatico != true ] && [ "$biblioteca" = "" ]; then
	echo "Error: --biblioteca es una opcion requerida si busybox no es estatico."
	exit 5
elif [ "$init" = "" ]; then
	echo "Error: --init es una opcion requerida."
	exit 6
elif [ $(id -u) != 0 ]; then
	echo "Error: Usted tiene que ser root. Utilise sudo o similar y trate otra ves."
	exit 7
fi
if [ ! -d "$carpeta" ]; then
	mkdir -p "$carpeta/build"
	mkdir -p "$carpeta/temp"
	mkdir -p "$carpeta/mount"
fi
cd "$carpeta/temp"
printf "Configuracion\n\n"
echo "Ruta de Busybox: $ruta_busybox"
echo "Ruta de la carpeta: $carpeta"
echo "Ruta de init: $init"
echo "Tipo de RD: $tipoinitrd"
echo "Lista de archivos: $archivos_copiar"
echo "Nodos de dispositivos: $dispositivos"
echo "Busybox estatico: $estatico"
printf "Verbosa: $verbosa\n\n"
printf "* Creando carpetas..."
if [ $verbosa = true ]; then
	printf "\n"
fi
for carpetas in bin dev etc lib mnt opt proc root sbin sys usr/bin usr/sbin usr/lib; do
	if [ $verbosa = true ]; then
		printf  "	* Creando $carpetas..."
	fi
	mkdir -p $carpetas
	if [ $verbosa = true ]; then
		printf "Listo.\n"
	else
		printf "."
	fi
done
printf "Listo.\n"
printf "* Copiando archivos..."
if [ $verbosa = true ]; then
	printf "\n"
fi
if [ "$archivos_copiar" != "" ]; then
	for archivos in $(cat "$archivos_copiar"); do
		if [ $verbosa = true ]; then
			printf "	* Copiando $archivos..."
		fi
		cp -r "$archivos" "./opt"
		if [ $verbosa = true ]; then
			printf "Listo.\n"
		else
			printf "."
		fi
	done
fi
if [ $verbosa = true ]; then
	printf "	* Copiando $ruta_busybox..."
fi
cp "$ruta_busybox" "./bin"
if [ $verbosa = true ]; then
	printf "Listo\n"
fi
if [ $estatico = false ]; then
	if [ $verbosa = true ]; then
		printf "	* Copiando $biblioteca..."
	fi
	cp "$biblioteca" "./lib"
	if [ $verbosa = true ]; then
		printf "Listo\n"
	fi
fi
if [ $verbosa = true ]; then
	printf "	* Copiando $init..."
fi
cp "$init" "."
printf "Listo.\n"
cd dev
if [ $(echo "$dispositivos" | grep -c ".tar") -gt 0 ]; then
	printf "Decomprimiendo $dispositivos..."
	tar -xf "$dispositivos"
elif [ $(echo "$dispositivos" | grep -c ".cpio") -gt 0 ]; then
	printf "Decomprimiendo $dispositivos..."
	cpio -id < "$dispositivos"
else
	printf "* Creando nodos de dispositivos..."
	mknod console c 5 1
	mknod null c 1 3
	mknod tty c 5 0
fi
cd ..
printf "Listo.\n"
printf "* Comprimiendo todo..."
if [ $tipoinitrd = "initramfs" ]; then
	find . -depth -print | cpio -o -H newc > ../build/initramfs.cpio
	cd ../build
	gzip initramfs.cpio
elif [ $tipoinitrd = "initrd" ]; then
	cd ../build
	dd if=/dev/zero of=initrd.img bs=1M count=4
	mkfs.ext2 -F initrd.img
	mount initrd.img "$carpeta"/mount
	cp -r ../temp/* ../mount
	umount ../mount
	gzip initrd.img
fi
printf "Listo.\n"
echo "* Limpiando y saliendo..."
mv * ~
cd ~
rm -rf "$carpeta"
exit 0
